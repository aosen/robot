{"name":"Robot","tagline":"Golang轻量级分布式爬虫框架","body":"# robot\r\nGolang爬虫框架。即可做通用爬虫也可做垂直爬虫\r\n\r\n##使用过程中遇到任何问题，请联系QQ: 316052486\r\n\r\n##思维脑图\r\n\r\n![思维脑图](http://i8.tietuku.com/b04bfbc8c05faf28.png \"思维脑图\")\r\n\r\n##robot分四个接口：\r\n* 下载模块(Downloader)\r\n* 页面处理模块(PageProcesser)\r\n* 任务调度模块(Scheduler)\r\n* pipline\r\n\r\n其中下载模块，调度模块已经实现，需要开发者自行实现页面处理规则与pipline\r\n\r\n##robot爬虫框架优势\r\n* 完全接口话，你可以随意定制下载器，页面处理器，调度器，pipeline\r\n* 爬虫池思想，稳定高效\r\n\r\n##使用说明\r\n###初始化爬虫\r\n```Golang\r\n\r\n//爬虫选项设置\r\noptions := robot.SpiderOptions{\r\n    TaskName:      spidername,\r\n    PageProcesser: process.NewWww79xsComProcessor(),\r\n    Downloader:    downloader.NewHttpDownloader(\"text/html; charset=gb2312\"),\r\n    Scheduler:     scheduler.NewMysqlScheduler(spidername, dbinfo),\r\n    //Scheduler: scheduler.NewQueueScheduler(false),\r\n    Pipelines: []robot.Pipeline{pipeline.NewPipelineMySQL(dbinfo)},\r\n    //设置资源管理器，资源池容量为100\r\n    ResourceManage: resource.NewSpidersPool(100, nil),\r\n}\r\n\r\n//爬虫初始化\r\nsp := robot.NewSpider(options)\r\n//增加根url\r\nsp.AddRequest(utils.InitRequest(start_url, map[string]string{\r\n    \"handler\": \"mainParse\",\r\n}))\r\ngo sp.Run()\r\n```\r\n###详细用列见\r\nexample下\r\n\r\n##开发进度\r\n* 2015-01-18 增加爬虫案例： example/www79xscom/ ***Done***\r\n* 2015-01-18 Request结构体中增加回调函数支持，更好支持垂直爬虫的实现,具体实例见 example/www79xscom/  ***Done***\r\n* 2015-01-14 增加爬虫池支持，提高爬虫系统性能 ***Done***\r\n* 2015-01-07 优化目录结构 ***Done***\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}